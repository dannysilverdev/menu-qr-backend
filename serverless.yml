service: menu-qr-backend

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 15
  stage: ${opt:stage, 'dev'}
  region: us-east-1

  environment:
    USERS_TABLE: MenuQrUsersTable-${opt:stage, 'dev'}
    NODE_ENV: ${opt:stage, 'dev'}
    DYNAMODB_ENDPOINT: http://localhost:8000

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:207567761860:table/MenuQrUsersTable-${opt:stage, 'dev'}"
        - "arn:aws:dynamodb:${self:provider.region}:207567761860:table/MenuQrUsersTable-${opt:stage, 'dev'}/index/categoryId-index"  # Permitir acceso al Ã­ndice

    - Effect: "Allow"
      Action:
        - "execute-api:Invoke"
      Resource:
        - "arn:aws:execute-api:${self:provider.region}:207567761860:*/*"

functions:
  signup:
    handler: handlers/authHandler.signup
    events:
      - http:
          path: signup
          method: post
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  login:
    handler: handlers/authHandler.login
    events:
      - http:
          path: login
          method: post
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  deleteUser:
    handler: handlers/authHandler.deleteUser
    events:
      - http:
          path: user/{userId}
          method: delete
          cors: true

  home:
    handler: handlers/handler.home
    events:
      - http:
          path: home
          method: get
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  menu:
    handler: handlers/handler.menu
    events:
      - http:
          path: menu
          method: get
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  publicRoute:
    handler: handlers/handler.viewMenu
    events:
      - http:
          path: view-menu/{userId}
          method: get
          cors:
            origin: '*'  
            headers:
              - Content-Type
            allowCredentials: false

  createCategory:
    handler: handlers/categoryHandler.createCategory
    events:
      - http:
          path: menu/category
          method: post
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  getCategories:
    handler: handlers/categoryHandler.getCategories
    events:
      - http:
          path: categories/{userId}
          method: get
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  deleteCategory:
    handler: handlers/categoryHandler.deleteCategory
    events:
      - http:
          path: menu/category/{categoryId}
          method: delete
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  deleteProduct:
    handler: handlers/productHandler.deleteProduct
    events:
      - http:
          path: menu/category/{categoryId}/product/{productId}
          method: delete
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  createProduct:
    handler: handlers/productHandler.createProduct
    events:
      - http:
          path: menu/category/{categoryId}/product
          method: post
          cors:
            origin: 'https://dljrvybt2jogj.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MenuQrUsersTable-${opt:stage, 'dev'}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: categoryId
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: categoryId-index
            KeySchema:
              - AttributeName: categoryId
                KeyType: HASH
              - AttributeName: SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    GatewayResponse:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          "gatewayresponse.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'"
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type, Authorization'"
          "gatewayresponse.header.Access-Control-Allow-Methods": "'GET, POST, OPTIONS'"
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

plugins:
  - serverless-offline

custom:
  defaultRegion: us-east-1

package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - .git/**
    - .vscode/**
    - tests/**
    - docs/**
    - "*.md" 
    - node_modules/aws-sdk/**
