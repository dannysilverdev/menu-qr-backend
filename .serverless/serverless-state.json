{
  "service": {
    "service": "menu-qr-backend",
    "serviceObject": {
      "name": "menu-qr-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "timeout": 15,
      "stage": "production",
      "region": "us-east-1",
      "environment": {
        "USERS_TABLE": "MenuQrUsersTable-production",
        "NODE_ENV": "production",
        "DYNAMODB_ENDPOINT": "http://localhost:8000"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:Scan",
            "dynamodb:Query"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-east-1:207567761860:table/MenuQrUsersTable-production",
            "arn:aws:dynamodb:us-east-1:207567761860:table/MenuQrUsersTable-production/index/categoryId-index"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "execute-api:Invoke"
          ],
          "Resource": "arn:aws:execute-api:us-east-1:207567761860:*/*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-login"
            }
          },
          "DeleteUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-deleteUser"
            }
          },
          "HomeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-home"
            }
          },
          "MenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-menu"
            }
          },
          "PublicRouteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-publicRoute"
            }
          },
          "CreateCategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-createCategory"
            }
          },
          "GetCategoriesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-getCategories"
            }
          },
          "DeleteCategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-deleteCategory"
            }
          },
          "DeleteProductLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-deleteProduct"
            }
          },
          "CreateProductLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/menu-qr-backend-production-createProduct"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "menu-qr-backend",
                        "production",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/menu-qr-backend-production*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/menu-qr-backend-production*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "menu-qr-backend",
                    "production",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-signup.zip"
              },
              "Handler": "handlers/authHandler.signup",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-signup",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-login.zip"
              },
              "Handler": "handlers/authHandler.login",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-login",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "DeleteUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-deleteUser.zip"
              },
              "Handler": "handlers/authHandler.deleteUser",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-deleteUser",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUserLogGroup"
            ]
          },
          "HomeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-home.zip"
              },
              "Handler": "handlers/handler.home",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-home",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HomeLogGroup"
            ]
          },
          "MenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-menu.zip"
              },
              "Handler": "handlers/handler.menu",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-menu",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MenuLogGroup"
            ]
          },
          "PublicRouteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-publicRoute.zip"
              },
              "Handler": "handlers/handler.viewMenu",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-publicRoute",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PublicRouteLogGroup"
            ]
          },
          "CreateCategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-createCategory.zip"
              },
              "Handler": "handlers/categoryHandler.createCategory",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-createCategory",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateCategoryLogGroup"
            ]
          },
          "GetCategoriesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-getCategories.zip"
              },
              "Handler": "handlers/categoryHandler.getCategories",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-getCategories",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetCategoriesLogGroup"
            ]
          },
          "DeleteCategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-deleteCategory.zip"
              },
              "Handler": "handlers/categoryHandler.deleteCategory",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-deleteCategory",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteCategoryLogGroup"
            ]
          },
          "DeleteProductLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-deleteProduct.zip"
              },
              "Handler": "handlers/productHandler.deleteProduct",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-deleteProduct",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteProductLogGroup"
            ]
          },
          "CreateProductLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
                "S3Key": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z/menu-qr-backend-createProduct.zip"
              },
              "Handler": "handlers/productHandler.createProduct",
              "Runtime": "nodejs18.x",
              "FunctionName": "menu-qr-backend-production-createProduct",
              "MemorySize": 1024,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "MenuQrUsersTable-production",
                  "NODE_ENV": "production",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateProductLogGroup"
            ]
          },
          "HomeLambdaVersiondjiuLjdESWGMFJ0LSF1xd9NhVkqdwuYFlMKvuF6vIU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HomeLambdaFunction"
              },
              "CodeSha256": "UMMxAHZiAHMSy5340wuSKAceV9XEHHK5GekJbsM+vCA="
            }
          },
          "MenuLambdaVersion4xUev5v1040zBqzPDU30MiZTNEolRaRah5TCgx3ySO4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MenuLambdaFunction"
              },
              "CodeSha256": "UMMxAHZiAHMSy5340wuSKAceV9XEHHK5GekJbsM+vCA="
            }
          },
          "PublicRouteLambdaVersiontruRFZ0SGdJstoE9sOSxTXioUkpS42wgY6sM1cI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PublicRouteLambdaFunction"
              },
              "CodeSha256": "UMMxAHZiAHMSy5340wuSKAceV9XEHHK5GekJbsM+vCA="
            }
          },
          "CreateCategoryLambdaVersion0rlbH7EwrTuXgNCHMRyweNNVVnqTenXyQClixYREOJ0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateCategoryLambdaFunction"
              },
              "CodeSha256": "DjEY/IRbjmjJzRFlXSyficKS3evPkHQ4d4IINk9D6aw="
            }
          },
          "GetCategoriesLambdaVersion8ZWudmICEOgNVHqmZYUn2j0uRcIpXlWQZXd73KYA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetCategoriesLambdaFunction"
              },
              "CodeSha256": "DjEY/IRbjmjJzRFlXSyficKS3evPkHQ4d4IINk9D6aw="
            }
          },
          "DeleteCategoryLambdaVersionkbjX30pkGT6huCfrfrwZ8MhK0hYOaviJADxOyw4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteCategoryLambdaFunction"
              },
              "CodeSha256": "DjEY/IRbjmjJzRFlXSyficKS3evPkHQ4d4IINk9D6aw="
            }
          },
          "DeleteProductLambdaVersionvb7EVT3gtk0iXWv7gFZNyP91T9T1dHvaaan7oDBLnY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteProductLambdaFunction"
              },
              "CodeSha256": "AtKTR/wKIsDkn1KSoLIXWP/bk2d0VEPk19+6gEvZGg4="
            }
          },
          "CreateProductLambdaVersion4OIlcJYg6I9yok4vXJRgVXjAmPXLeqzHaTirM9VzQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateProductLambdaFunction"
              },
              "CodeSha256": "AtKTR/wKIsDkn1KSoLIXWP/bk2d0VEPk19+6gEvZGg4="
            }
          },
          "SignupLambdaVersiong1n8sH3TgPDpcIlFukrPiAxU9RI2cXfe0HsWxKFat4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "XsaT9f/0i+HY6l7Zhc0m/SO4fUOsHN1z9mHLiykK5hk="
            }
          },
          "LoginLambdaVersionUNngdDzVZhi5umhhyi3L74QE4CCKML1bXN1ZWh50": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "XsaT9f/0i+HY6l7Zhc0m/SO4fUOsHN1z9mHLiykK5hk="
            }
          },
          "DeleteUserLambdaVersionPtZ5QsGFMv9KR5DSRUz00Dppn5MarDzKLcjsWTPM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUserLambdaFunction"
              },
              "CodeSha256": "XsaT9f/0i+HY6l7Zhc0m/SO4fUOsHN1z9mHLiykK5hk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "production-menu-qr-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSignup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "signup",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceHome": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "home",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenu": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "menu",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenuCategory": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceMenu"
              },
              "PathPart": "category",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenuCategoryCategoryidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceMenuCategory"
              },
              "PathPart": "{categoryId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenuCategoryCategoryidVarProduct": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVar"
              },
              "PathPart": "product",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenuCategoryCategoryidVarProductProductidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVarProduct"
              },
              "PathPart": "{productId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceViewDashmenu": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "view-menu",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceViewDashmenuUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceViewDashmenu"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCategories": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "categories",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCategoriesUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCategories"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSignupOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserUseridVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHomeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceHome"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMenuOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenu"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodViewDashmenuUseridVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceViewDashmenuUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMenuCategoryOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategory"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCategoriesUseridVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCategoriesUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarProductProductidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVarProductProductidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarProductOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'true'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVarProduct"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSignupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SignupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserUseridVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodHomeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHome"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HomeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "HomeLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMenuGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenu"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MenuLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodViewDashmenuUseridVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceViewDashmenuUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PublicRouteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PublicRouteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMenuCategoryPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategory"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateCategoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateCategoryLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCategoriesUseridVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCategoriesUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetCategoriesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetCategoriesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteCategoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteCategoryLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarProductProductidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVarProductProductidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteProductLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteProductLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMenuCategoryCategoryidVarProductPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenuCategoryCategoryidVarProduct"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateProductLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateProductLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1730219953526": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "production"
            },
            "DependsOn": [
              "ApiGatewayMethodSignupOptions",
              "ApiGatewayMethodLoginOptions",
              "ApiGatewayMethodUserUseridVarOptions",
              "ApiGatewayMethodHomeOptions",
              "ApiGatewayMethodMenuOptions",
              "ApiGatewayMethodViewDashmenuUseridVarOptions",
              "ApiGatewayMethodMenuCategoryOptions",
              "ApiGatewayMethodCategoriesUseridVarOptions",
              "ApiGatewayMethodMenuCategoryCategoryidVarOptions",
              "ApiGatewayMethodMenuCategoryCategoryidVarProductProductidVarOptions",
              "ApiGatewayMethodMenuCategoryCategoryidVarProductOptions",
              "ApiGatewayMethodSignupPost",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodUserUseridVarDelete",
              "ApiGatewayMethodHomeGet",
              "ApiGatewayMethodMenuGet",
              "ApiGatewayMethodViewDashmenuUseridVarGet",
              "ApiGatewayMethodMenuCategoryPost",
              "ApiGatewayMethodCategoriesUseridVarGet",
              "ApiGatewayMethodMenuCategoryCategoryidVarDelete",
              "ApiGatewayMethodMenuCategoryCategoryidVarProductProductidVarDelete",
              "ApiGatewayMethodMenuCategoryCategoryidVarProductPost"
            ]
          },
          "SignupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HomeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HomeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "MenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PublicRouteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PublicRouteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateCategoryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateCategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetCategoriesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetCategoriesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteCategoryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteCategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteProductLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteProductLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateProductLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateProductLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "MenuQrUsersTable-production",
              "AttributeDefinitions": [
                {
                  "AttributeName": "PK",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "SK",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "categoryId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "PK",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "SK",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "categoryId-index",
                  "KeySchema": [
                    {
                      "AttributeName": "categoryId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "SK",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "GatewayResponse": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
                "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type, Authorization'",
                "gatewayresponse.header.Access-Control-Allow-Methods": "'GET, POST, OPTIONS'",
                "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-e469ae14-d620",
            "Export": {
              "Name": "sls-menu-qr-backend-production-ServerlessDeploymentBucketName"
            }
          },
          "HomeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HomeLambdaVersiondjiuLjdESWGMFJ0LSF1xd9NhVkqdwuYFlMKvuF6vIU"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-HomeLambdaFunctionQualifiedArn"
            }
          },
          "MenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MenuLambdaVersion4xUev5v1040zBqzPDU30MiZTNEolRaRah5TCgx3ySO4"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-MenuLambdaFunctionQualifiedArn"
            }
          },
          "PublicRouteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PublicRouteLambdaVersiontruRFZ0SGdJstoE9sOSxTXioUkpS42wgY6sM1cI"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-PublicRouteLambdaFunctionQualifiedArn"
            }
          },
          "CreateCategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateCategoryLambdaVersion0rlbH7EwrTuXgNCHMRyweNNVVnqTenXyQClixYREOJ0"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-CreateCategoryLambdaFunctionQualifiedArn"
            }
          },
          "GetCategoriesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetCategoriesLambdaVersion8ZWudmICEOgNVHqmZYUn2j0uRcIpXlWQZXd73KYA"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-GetCategoriesLambdaFunctionQualifiedArn"
            }
          },
          "DeleteCategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteCategoryLambdaVersionkbjX30pkGT6huCfrfrwZ8MhK0hYOaviJADxOyw4"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-DeleteCategoryLambdaFunctionQualifiedArn"
            }
          },
          "DeleteProductLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteProductLambdaVersionvb7EVT3gtk0iXWv7gFZNyP91T9T1dHvaaan7oDBLnY"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-DeleteProductLambdaFunctionQualifiedArn"
            }
          },
          "CreateProductLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateProductLambdaVersion4OIlcJYg6I9yok4vXJRgVXjAmPXLeqzHaTirM9VzQ"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-CreateProductLambdaFunctionQualifiedArn"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersiong1n8sH3TgPDpcIlFukrPiAxU9RI2cXfe0HsWxKFat4"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionUNngdDzVZhi5umhhyi3L74QE4CCKML1bXN1ZWh50"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-LoginLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUserLambdaVersionPtZ5QsGFMv9KR5DSRUz00Dppn5MarDzKLcjsWTPM"
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-DeleteUserLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/production"
                ]
              ]
            },
            "Export": {
              "Name": "sls-menu-qr-backend-production-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "defaultRegion": "us-east-1"
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "signup": {
        "handler": "handlers/authHandler.signup",
        "events": [
          {
            "http": {
              "path": "signup",
              "method": "post",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-signup",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-signup.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SignupLambdaVersiong1n8sH3TgPDpcIlFukrPiAxU9RI2cXfe0HsWxKFat4"
      },
      "login": {
        "handler": "handlers/authHandler.login",
        "events": [
          {
            "http": {
              "path": "login",
              "method": "post",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization",
                  "X-Amz-Date",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-login",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-login.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionUNngdDzVZhi5umhhyi3L74QE4CCKML1bXN1ZWh50"
      },
      "deleteUser": {
        "handler": "handlers/authHandler.deleteUser",
        "events": [
          {
            "http": {
              "path": "user/{userId}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-deleteUser",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-deleteUser.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteUserLambdaVersionPtZ5QsGFMv9KR5DSRUz00Dppn5MarDzKLcjsWTPM"
      },
      "home": {
        "handler": "handlers/handler.home",
        "events": [
          {
            "http": {
              "path": "home",
              "method": "get",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-home",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-home.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "HomeLambdaVersiondjiuLjdESWGMFJ0LSF1xd9NhVkqdwuYFlMKvuF6vIU"
      },
      "menu": {
        "handler": "handlers/handler.menu",
        "events": [
          {
            "http": {
              "path": "menu",
              "method": "get",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-menu",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-menu.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "MenuLambdaVersion4xUev5v1040zBqzPDU30MiZTNEolRaRah5TCgx3ySO4"
      },
      "publicRoute": {
        "handler": "handlers/handler.viewMenu",
        "events": [
          {
            "http": {
              "path": "view-menu/{userId}",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-publicRoute",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-publicRoute.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "PublicRouteLambdaVersiontruRFZ0SGdJstoE9sOSxTXioUkpS42wgY6sM1cI"
      },
      "createCategory": {
        "handler": "handlers/categoryHandler.createCategory",
        "events": [
          {
            "http": {
              "path": "menu/category",
              "method": "post",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-createCategory",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-createCategory.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateCategoryLambdaVersion0rlbH7EwrTuXgNCHMRyweNNVVnqTenXyQClixYREOJ0"
      },
      "getCategories": {
        "handler": "handlers/categoryHandler.getCategories",
        "events": [
          {
            "http": {
              "path": "categories/{userId}",
              "method": "get",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-getCategories",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-getCategories.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetCategoriesLambdaVersion8ZWudmICEOgNVHqmZYUn2j0uRcIpXlWQZXd73KYA"
      },
      "deleteCategory": {
        "handler": "handlers/categoryHandler.deleteCategory",
        "events": [
          {
            "http": {
              "path": "menu/category/{categoryId}",
              "method": "delete",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-deleteCategory",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-deleteCategory.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteCategoryLambdaVersionkbjX30pkGT6huCfrfrwZ8MhK0hYOaviJADxOyw4"
      },
      "deleteProduct": {
        "handler": "handlers/productHandler.deleteProduct",
        "events": [
          {
            "http": {
              "path": "menu/category/{categoryId}/product/{productId}",
              "method": "delete",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-deleteProduct",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-deleteProduct.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteProductLambdaVersionvb7EVT3gtk0iXWv7gFZNyP91T9T1dHvaaan7oDBLnY"
      },
      "createProduct": {
        "handler": "handlers/productHandler.createProduct",
        "events": [
          {
            "http": {
              "path": "menu/category/{categoryId}/product",
              "method": "post",
              "cors": {
                "origin": "https://dljrvybt2jogj.cloudfront.net",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "Authorization"
                ],
                "allowCredentials": true
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "menu-qr-backend-production-createProduct",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/home/dannysilver/menu-qr/backend/.serverless/build/menu-qr-backend-createProduct.zip"
        },
        "memory": 1024,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateProductLambdaVersion4OIlcJYg6I9yok4vXJRgVXjAmPXLeqzHaTirM9VzQ"
      }
    },
    "resources": {
      "Resources": {
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "MenuQrUsersTable-production",
            "AttributeDefinitions": [
              {
                "AttributeName": "PK",
                "AttributeType": "S"
              },
              {
                "AttributeName": "SK",
                "AttributeType": "S"
              },
              {
                "AttributeName": "categoryId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "PK",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "SK",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "categoryId-index",
                "KeySchema": [
                  {
                    "AttributeName": "categoryId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "SK",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "GatewayResponse": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "'https://dljrvybt2jogj.cloudfront.net'",
              "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type, Authorization'",
              "gatewayresponse.header.Access-Control-Allow-Methods": "'GET, POST, OPTIONS'",
              "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
            },
            "ResponseType": "DEFAULT_4XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "menu-qr-backend",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "excludeDevDependencies": true,
        "exclude": [
          ".git/**",
          ".vscode/**",
          "tests/**",
          "docs/**",
          "*.md",
          "node_modules/aws-sdk/**"
        ],
        "artifactsS3KeyDirname": "serverless/menu-qr-backend/production/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-e469ae14-d620",
        "artifactDirectoryName": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/menu-qr-backend/production/1730219964394-2024-10-29T16:39:24.394Z",
    "artifact": ""
  }
}